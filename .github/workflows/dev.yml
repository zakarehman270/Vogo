name: Deploy Vogo App

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: ðŸ“¥ Install dependencies with npm
        run: npm install

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          eval "$(ssh-agent -s)"
          echo "${{ secrets.VOGO_DEV_AWS_SSH }}" | tr -d '\r' > ~/.ssh/id_rsa_new
          chmod 600 ~/.ssh/id_rsa_new
          ssh-add ~/.ssh/id_rsa_new

      - name: Sync files to the VPS
        env:
          HOST: ${{ secrets.VOGO_DEV_AWS_HOST }}
          USERNAME: ${{ secrets.VOGO_DEV_AWS_HOSTUSER }}
          PORT: ${{ secrets.VOGO_DEV_AWS_PORT }}
          REMOTE_DIR: /home/ubuntu/vogo-app/vogo
        run: |
          rsync -avz --exclude 'node_modules' --exclude '.git' --exclude '.github' \
            -e "ssh -i ~/.ssh/id_rsa_new -p $PORT -o StrictHostKeyChecking=no" . \
            $USERNAME@$HOST:$REMOTE_DIR

      - name: Run build commands on VPS
        env:
          HOST: ${{ secrets.VOGO_DEV_AWS_HOST }}
          USERNAME: ${{ secrets.VOGO_DEV_AWS_HOSTUSER }}
          PORT: ${{ secrets.VOGO_DEV_AWS_PORT }}
          REMOTE_DIR: /home/ubuntu/vogo-app/vogo
        run: |
          ssh -i ~/.ssh/id_rsa_new -o StrictHostKeyChecking=no -p "$PORT" "$USERNAME@$HOST" << 'EOF'
          set -e # Exit on error

          cd "/home/ubuntu/vogo-app/vogo" || exit 1
          echo "Current Directory: $(pwd)"

          # Check if Node.js is installed
          if ! command -v node &> /dev/null; then
            echo "Node.js not found. Installing..."
            curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          # Check if PM2 is installed
          if ! command -v pm2 &> /dev/null; then
            echo "PM2 not found. Installing..."
            sudo npm install -g pm2
          fi

          # Ensure correct Node.js version
          node -v

          # Ensure correct PM2 version
          pm2 -v

          # Install dependencies
          rm -f package-lock.json
          npm install || { echo "npm install failed"; exit 1; }

          # Run build
          npm run build || { echo "npm build failed"; exit 1; }

          echo "Updating PM2..."
          pm2 update || { echo "Failed to update PM2"; exit 1; }

          # Check if the process already exists
          if pm2 list | grep -q "vogo-app"; then
            echo "Restarting existing PM2 process..."
            pm2 restart vogo-app
          else
            echo "Starting new PM2 process..."
            pm2 start npm --name vogo-app -- start
          fi
